
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000160  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  000001d4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001d4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000204  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00000244  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001085  00000000  00000000  0000038c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a5f  00000000  00000000  00001411  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a20  00000000  00000000  00001e70  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002bc  00000000  00000000  00002890  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000065a  00000000  00000000  00002b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000080e  00000000  00000000  000031a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  000039b4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 88 00 	jmp	0x110	; 0x110 <__vector_11>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a1 30       	cpi	r26, 0x01	; 1
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 97 00 	call	0x12e	; 0x12e <main>
  88:	0c 94 ae 00 	jmp	0x15c	; 0x15c <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <DHT11_Init>:
  90:	87 b1       	in	r24, 0x07	; 7
  92:	81 60       	ori	r24, 0x01	; 1
  94:	87 b9       	out	0x07, r24	; 7
  96:	88 b1       	in	r24, 0x08	; 8
  98:	81 60       	ori	r24, 0x01	; 1
  9a:	88 b9       	out	0x08, r24	; 8
  9c:	08 95       	ret

0000009e <I2C_Init>:
  9e:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  a2:	87 e4       	ldi	r24, 0x47	; 71
  a4:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
  a8:	84 e0       	ldi	r24, 0x04	; 4
  aa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  ae:	08 95       	ret

000000b0 <SerialPort_Init>:
  b0:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  b4:	96 e0       	ldi	r25, 0x06	; 6
  b6:	90 93 c2 00 	sts	0x00C2, r25	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  ba:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  be:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  c2:	08 95       	ret

000000c4 <SerialPort_TX_Enable>:
  c4:	e1 ec       	ldi	r30, 0xC1	; 193
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	88 60       	ori	r24, 0x08	; 8
  cc:	80 83       	st	Z, r24
  ce:	08 95       	ret

000000d0 <SerialPort_RX_Enable>:
  d0:	e1 ec       	ldi	r30, 0xC1	; 193
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	80 81       	ld	r24, Z
  d6:	80 61       	ori	r24, 0x10	; 16
  d8:	80 83       	st	Z, r24
  da:	08 95       	ret

000000dc <SerialPort_RX_Interrupt_Enable>:
  dc:	e1 ec       	ldi	r30, 0xC1	; 193
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	80 68       	ori	r24, 0x80	; 128
  e4:	80 83       	st	Z, r24
  e6:	08 95       	ret

000000e8 <Timer1_Init>:
  e8:	e1 e8       	ldi	r30, 0x81	; 129
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	80 81       	ld	r24, Z
  ee:	88 60       	ori	r24, 0x08	; 8
  f0:	80 83       	st	Z, r24
  f2:	81 e1       	ldi	r24, 0x11	; 17
  f4:	9a e7       	ldi	r25, 0x7A	; 122
  f6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  fa:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
  fe:	af e6       	ldi	r26, 0x6F	; 111
 100:	b0 e0       	ldi	r27, 0x00	; 0
 102:	8c 91       	ld	r24, X
 104:	82 60       	ori	r24, 0x02	; 2
 106:	8c 93       	st	X, r24
 108:	80 81       	ld	r24, Z
 10a:	85 60       	ori	r24, 0x05	; 5
 10c:	80 83       	st	Z, r24
 10e:	08 95       	ret

00000110 <__vector_11>:
 110:	1f 92       	push	r1
 112:	0f 92       	push	r0
 114:	0f b6       	in	r0, 0x3f	; 63
 116:	0f 92       	push	r0
 118:	11 24       	eor	r1, r1
 11a:	8f 93       	push	r24
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 122:	8f 91       	pop	r24
 124:	0f 90       	pop	r0
 126:	0f be       	out	0x3f, r0	; 63
 128:	0f 90       	pop	r0
 12a:	1f 90       	pop	r1
 12c:	18 95       	reti

0000012e <main>:
 12e:	87 e6       	ldi	r24, 0x67	; 103
 130:	0e 94 58 00 	call	0xb0	; 0xb0 <SerialPort_Init>
 134:	0e 94 62 00 	call	0xc4	; 0xc4 <SerialPort_TX_Enable>
 138:	0e 94 68 00 	call	0xd0	; 0xd0 <SerialPort_RX_Enable>
 13c:	0e 94 6e 00 	call	0xdc	; 0xdc <SerialPort_RX_Interrupt_Enable>
 140:	0e 94 48 00 	call	0x90	; 0x90 <DHT11_Init>
 144:	0e 94 4f 00 	call	0x9e	; 0x9e <I2C_Init>
 148:	0e 94 74 00 	call	0xe8	; 0xe8 <Timer1_Init>
 14c:	78 94       	sei
 14e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 152:	88 23       	and	r24, r24
 154:	e1 f3       	breq	.-8      	; 0x14e <main+0x20>
 156:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 15a:	f9 cf       	rjmp	.-14     	; 0x14e <main+0x20>

0000015c <_exit>:
 15c:	f8 94       	cli

0000015e <__stop_program>:
 15e:	ff cf       	rjmp	.-2      	; 0x15e <__stop_program>
